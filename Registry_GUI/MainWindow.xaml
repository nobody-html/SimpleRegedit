<Window x:Name="MainWindowGUI"
        x:Class="Registry_GUI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Registry_GUI"
        mc:Ignorable="d"
        Height="450" Width="800"
        WindowStartupLocation="CenterScreen"
        WindowStyle="None"
        AllowsTransparency="True"
        Background="Transparent"
        Icon="./assets/icon.ico">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="MinimizeButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#3C464A"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#3C464A"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#4A5461"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#4A5461"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CloseButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#ED4245"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#ED4245"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#F08B8D"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#F08B8D"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ApplyButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="#202225"/>
            <Setter Property="BorderBrush" Value="#202225"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="5" BorderBrush="#202225" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#3C464A"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#3C464A"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#4A5461"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#4A5461"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <!--Main window-->
    <Grid Background="Transparent">
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition Height="187*"/>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="200"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>

        <!--Fill small transparent thingy-->
        <Label Grid.Row="0" Grid.RowSpan="3"
               Grid.Column="0" Grid.ColumnSpan="3">
            <Image Source="./assets/lbl_background_mainwindow.png"/>
        </Label>

        <!--Title bar-->
        <Border Grid.Row="0" Grid.ColumnSpan="2"
                CornerRadius="5, 5, 0, 0"
                Background="#202225"
                MouseDown="Border_MouseDown" Margin="0,0,0,0.4">

            <Grid HorizontalAlignment="Stretch">

                <Label Content="SimpleRegedit"
                       Margin="10,2,0,2"
                       Foreground="Gray"
                       FontWeight="SemiBold"/>

                <StackPanel HorizontalAlignment="Right"
                            Orientation="Horizontal">

                    <Button Width="25" Height="20"
                            Content="‒"
                            Background="Transparent"
                            BorderThickness="0"
                            Foreground="LightGray"
                            FontWeight="SemiBold"
                            Click="MinimizeButton_Click" Style="{DynamicResource MinimizeButtonStyle}"/>

                    <Button x:Name="CloseButton"
                            Width="25" Height="20"
                            Margin="0, 0, 5, 0"
                            Content="✕"
                            Background="Transparent"
                            BorderThickness="0"
                            Foreground="LightGray"
                            FontWeight="SemiBold"
                            Click="CloseButton_Click" Style="{DynamicResource CloseButtonStyle}"/>

                </StackPanel>
            </Grid>
        </Border>

        <!--GUI-->
        <Border Grid.Row="1" Grid.ColumnSpan="2"
                CornerRadius="0, 0, 5, 5"
                Background="#2C2F33">

            <Grid>

                <!--DisableAcrylicBackgroundOnLogon-->
                <CheckBox x:Name="DisableAcrylicBackgroundOnLogon"
                          Content="Disable blured lockscreen"
                          ToolTip="Disables the lock screen blur when logging on to the computer"
                          Margin="50,50,589,355.2"
                          Foreground="LightGray"
                          FontWeight="DemiBold"
                          IsEnabled="False"/>

                <!--DisallowShaking-->
                <CheckBox x:Name="DisallowShaking"
                          Content="Disable &quot;Shake to Minimize&quot;"
                          ToolTip="Disables the &quot;Shake to Minimize&quot; feature"
                          Margin="50,100,578,305"
                          Foreground="LightGray"
                          FontWeight="DemiBold"
                          IsEnabled="False"/>

                <!--ShowSecondsInSystemClock-->
                <CheckBox x:Name="ShowSecondsInSystemClock"
                          Content="Show the seconds in the taskbar clock"
                          ToolTip="Shows also the seconds in the taskbar clock&#x0a;Reboot required"
                          Margin="50,150,524,255.2"
                          Foreground="LightGray"
                          FontWeight="DemiBold"
                          IsEnabled="False"/>

                <!--NoLockScreen-->
                <CheckBox x:Name="NoLockScreen"
                          Content="Disable the lock screen"
                          ToolTip="Disables the Windows Lock Screen and directly prompts the sign in window"
                          Margin="50,200,606,205"
                          Foreground="LightGray"
                          FontWeight="DemiBold"
                          IsEnabled="False"/>

                <!--Apply Button-->
                <Button x:Name="ApplyButton"
                        Click="ApplyButton_Click"
                        Width="50" Height="50"
                        Margin="730,349,20,20"
                        Padding="5, 5, 5, 5"
                        Content="Apply"
                        Foreground="LightGray"
                        FontWeight="SemiBold"
                        Style="{DynamicResource ApplyButtonStyle}"
                        IsEnabled="False"/>
                
            </Grid>
        </Border>
    </Grid>
</Window>
